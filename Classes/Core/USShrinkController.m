//
//  USShrinkController.m
//  URL Shrink
//
//  Created by Steve on 3/30/09.
//  Copyright 2009 Steve Streza. All rights reserved.
//

#import "USShrinkController.h"

#import <objc/runtime.h>

@implementation USShrinkController

objc_singleton(USShrinkController, sharedShrinkController);

- (NSArray*) subclassesOfClass:(Class)superclass fromCArray:(Class[])classes withCount:(int)count {
	NSMutableArray *array = [NSMutableArray array];
	
	for (int i = 0; i < count; i++) {
		Class subclass = classes[i];
		if (class_getSuperclass(subclass) == superclass
			&& [NSStringFromClass(subclass) hasPrefix:@"NSKVONotifying"] == NO
			/* avoid the autogenerated KVO classes if they ever come up in the future */)
		{
			[array addObject:subclass];
			[array addObjectsFromArray:[self subclassesOfClass:subclass fromCArray:classes withCount:count]];
		}
	}
	
	return array;
}

-(NSArray *)allShrinkers{
	int count = objc_getClassList(NULL, 0);
	
	Class classes[count];
	objc_getClassList(classes, count);
	
	return [self subclassesOfClass:[USURLShrinker class] fromCArray:classes withCount:count];
}

-(USURLShrinker *)shrinker{
	Class shrinkerClass = NULL;
	
	NSArray *shrinkers = [self allShrinkers];
	
	//get the user's preferred class
	NSString *defaultsValue = [[NSUserDefaults standardUserDefaults] stringForKey:kUSShrinkChoiceDefaultsKey];
	if(defaultsValue && [shrinkers objectForKey:defaultsValue]){
		NSLog(@"Found user default: %@",defaultsValue);
		shrinkerClass = [shrinkers objectForKey:defaultsValue];
	}
	
	//if there is none, grab one at random
	if(!shrinkerClass){
		NSArray *keys = [shrinkers allKeys];
		NSUInteger index = 0;
		if(keys.count > 1){
#define GetRandom(_min,_max) ((rand() % ((_max) - (_min) - 1)) + (_min))
			index = GetRandom(1, [keys count]) - 1;
		}
	
		shrinkerClass = [shrinkers objectForKey:[keys objectAtIndex:index]];
	}

	//if it exists, make one
	if(shrinkerClass){
		return [[[shrinkerClass alloc] init] autorelease];
	}else return nil;
}

@end
